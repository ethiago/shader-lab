#version 400 compatibility
layout( vertices = 3 )  out;

in vec3 N[];
out vec3 cor[];

void main( )
{
	#define id  gl_InvocationID

	gl_out[ id ].gl_Position = gl_in[ id ].gl_Position;

//if(id == 0)
{
	vec3 n[4];

	n[0] = normalize(gl_NormalMatrix * ( (N[0] + N[1])/2.0) );
	n[1] = normalize(gl_NormalMatrix * ( (N[0] + N[2])/2.0) );
	n[2] = normalize(gl_NormalMatrix * ( (N[1] + N[2])/2.0) );
	n[3] = normalize(gl_NormalMatrix * ( (N[0] + N[1] + N[2])/3.0) );

	gl_TessLevelOuter[0] =  1.0 / max(abs(n[0].z), 0.01 );
	gl_TessLevelOuter[1] =  1.0 / max(abs(n[1].z), 0.01 );
	gl_TessLevelOuter[2] =  1.0 / max(abs(n[2].z), 0.01 );

	gl_TessLevelInner[0] =  1.0 / max(abs(n[3].z), 0.01 );

cor[id] = vec3(0.0,1.0,0.0);
}

	
}